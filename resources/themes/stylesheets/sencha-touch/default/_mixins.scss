@import 'compass/css3';

// options: matte, bevel, glossy, recessed, flat
@mixin bg_gradient($bg_color, $type: $base_gradient) {
  background-color: $bg_color;
  @if $include_highlights {
    @if $type == bevel {
      @include linear-gradient(color_stops(lighten($bg_color, 30%), lighten($bg_color, 15%) 2%, lighten($bg_color, 8%) 30%, $bg_color 65%, darken($bg_color, 10%)));
    } @else if $type == glossy {
      @include linear-gradient(color_stops(lighten($bg_color, 15%), lighten($bg_color, 5%) 50%, $bg_color 51%, darken($bg_color, 5%)));
    } @else if $type == recessed {
      @include linear-gradient(color_stops(darken($bg_color, 10%), darken($bg_color, 5%) 10%, $bg_color 65%, lighten($bg_color, .5%)));
    } @else if $type == matte {
      @include linear-gradient(color_stops(lighten($bg_color, 30%), lighten($bg_color, 10%) 2%, darken($bg_color, 7%)));
    }
  }
}

// The toolbar button mixin adds background colors and borders
// as well as styles the rounded and back/forward button types
@mixin toolbar_button($bgcolor, $type: $button_gradient){
  &, .x-toolbar & {
    border: .1em solid darken($bgcolor, 20%);
    border-top-color: darken($bgcolor, 15%);
    @include color_by_background($bgcolor);
    
    &.x-button-back:before, &.x-button-forward:before {
      background: darken($bgcolor, 20%);
    }
  
    &, &.x-button-back:after, &.x-button-forward:after {
      @include bg_gradient($bgcolor, $type);
    }
    
    img.x-icon-mask {
      @include mask_by_background($bgcolor);
    }
  
    @if $include_highlights {
      @include bevel_by_background($bgcolor);
      -webkit-box-shadow: rgba(#fff, .1) 0 .1em 0;
    }

    &.x-button-pressed, &.x-button-active {
      &, &:after {
        @include bg_gradient(darken($bgcolor, 7%), 'recessed');
      }
      @if $include_highlights {
        -webkit-box-shadow: inset saturate(darken($bgcolor, 15%), 5%) 0 0 .1em, rgba(#fff, .1) 0 .1em 0;
      }
    }
  }
}

@mixin bevel_text($type: 'shadow') {
  @if $include_highlights {
    @if $type == shadow {
      text-shadow: rgba(0,0,0,.5) 0 -.08em 0;
    } @else {
      text-shadow: rgba(255,255,255,.25) 0 .08em 0;
    }
  }
}

@mixin bevel_box($type: 'light') {
  @if $include_highlights {
    @if $type == shadow {
      -webkit-box-shadow: rgba(#000, .5) 0 -.06em 0;
    } @else {
      -webkit-box-shadow: rgba(#fff, .35) 0 .06em 0;
    }
  }
}

@mixin insertion($width: 30px, $height: 30px, $top: 0, $left: 0) {
  content: "\00a0";
  position: absolute;
  width: $width;
  height: $height;
  top: $top;
  left: $left;
  @include box-sizing(border-box); // Doesn't get set by * in _core.scss
}

@mixin stretch {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin color_by_background($bg, $contrast: 100%) {
  @if (lightness($bg) > 50) { color: darken($bg, $contrast) }
  @else { color: lighten($bg, $contrast) }
}

@mixin bevel_by_background($bg) {
  @if (lightness($bg) > 50) { @include bevel_text(light) }
  @else { @include bevel_text; }
}

@mixin mask_by_background($bg, $contrast: 100%, $style: 'glossy') {
  @if (lightness($bg) > 50) { @include bg_gradient(darken($bg, $contrast), $style) }
  @else { @include bg_gradient(lighten($bg, $contrast), $style) }
}